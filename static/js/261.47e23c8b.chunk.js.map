{"version":3,"file":"static/js/261.47e23c8b.chunk.js","mappings":"qVAIaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6LAYtBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yPAgBrBI,EAAgBP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6QAe7BM,GAAOT,EAAAA,EAAAA,IAAOU,EAAAA,IAAPV,CAAkBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+CAMzBS,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAoBc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mF,SChDnCY,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,cAGvCC,EAAW,SAAHC,GAAoB,IAAfC,EAAQD,EAARC,SACxB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAER,MAAO,IACxBS,iBAAkBZ,EAClBQ,SAAU,SAACK,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACbC,EAAeH,EAAOV,MAAMc,OAClCT,EAASQ,GACTD,GACF,EAAEG,UAEFC,EAAAA,EAAAA,MAACnC,EAAO,CAAAkC,SAAA,EAERT,EAAAA,EAAAA,KAACpB,EAAK,CAAC+B,KAAK,OAAOC,GAAG,QAAQC,KAAK,WAC/Bb,EAAAA,EAAAA,KAACZ,EAAK,CAACyB,KAAK,QAAQC,UAAU,UAG9Bd,EAAAA,EAAAA,KAACjB,EAAa,CAAC4B,KAAK,SAAQF,UAC5BT,EAAAA,EAAAA,KAACf,EAAI,UAKf,EC9Ba8B,EAAa,SAAHjB,GAAqC,IAA/BkB,EAAalB,EAAbkB,cAAeC,EAAQnB,EAARmB,SAE1C,OACEjB,EAAAA,EAAAA,KAAA,MAAAS,SACGO,EAAcE,QAAQC,KAAI,SAAAC,GAAY,OACrCpB,EAAAA,EAAAA,KAAA,MAAAS,UACET,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAaR,IAClCY,MAAQ,CAACC,KAAMR,GAAUR,SACtBW,EAAaM,SAHTN,EAAaR,GAKjB,KAIb,E,UCRe,SAASe,IAAU,IAADC,EAC/BC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClB/C,EAA2B,QAAtBkC,EAAGc,EAAOE,IAAI,gBAAQ,IAAAhB,EAAAA,EAAI,GAC/BX,GAAW4B,EAAAA,EAAAA,MAkCjB,OArBAC,EAAAA,EAAAA,YAAU,WAGuB,SAAAC,IAa9B,OAb8BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA/B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEuB,OAFvBF,EAAAC,KAAA,EAEInB,GAAa,GAAMkB,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAmB7D,GAAO,KAAD,EAA/CyD,EAAaC,EAAAI,KACnBlB,EAAgBa,GAAeC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE/BM,IAAAA,OAAAA,QACE,iDACA,QAEkB,OAFlBN,EAAAC,KAAA,GAEFnB,GAAa,GAAOkB,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvBW,MAAA,KAAAC,UAAA,CAfIpB,GAAe,WAEWK,EAAAc,MAAC,KAADC,UAAA,CAe/BC,EACF,GAAG,CAACrE,EAAOgD,KAGThC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,OAAAS,UACET,EAAAA,EAAAA,KAACH,EAAQ,CAACE,SAnCK,SAAAiE,GACF,KAAbA,IAIJtB,EAAOuB,IAAI,QAASD,GACpBrB,EAAUD,GAEVJ,EAAgB,IAClB,MA6BKL,IACCjC,EAAAA,EAAAA,KAACkE,EAAAA,GAAW,CACVC,OAAO,KACPC,MAAM,MACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,SAIZpC,EAAanB,SAAWmB,EAAanB,QAAQwD,OAAS,IACrD1E,EAAAA,EAAAA,KAACe,EAAU,CAACC,cAAeqB,EAAcpB,SAAWA,MAI5D,C","sources":["components/SearshForm/SearchFormStyled.js","components/SearshForm/SearshForm.js","components/MoviesList/MoviesList.js","pages/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Field, Form, ErrorMessage } from 'formik';\nimport { IoMdSearch } from 'react-icons/io';\n\nexport const Wrapper = styled(Form)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 4px;\n \n  margin-bottom: 36px;\n`;\n\nexport const Input = styled(Field)`\n\n  display: flex;\n  width: 100%;\n  font: inherit;\n  border-radius:  4px 0 0 4px ; \n  font-size: 20px;\n  padding: 9px 0;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  width: 48px;\n  height: 48px;\n  border: none; \n  border-radius: 0 4px 4px 0; \n  background-color: #333; \n  color: #fff; \n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(IoMdSearch)`\n  width: 20px;\n  height: 20px;\n  \n`;\n\nexport const Error = styled(ErrorMessage)`\n position: absolute;\nbottom: -15px;\n  color: red;\n  font-size: 14px;\n`;\n\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Error, Icon, Input, SearchFormBtn, Wrapper } from './SearchFormStyled';\n\n\nconst querySchema = Yup.object().shape({\n  query: Yup.string().min(3, 'Too Short!').required('Required'),\n});\n\nexport const Searcher = ({onSubmit}) => {\n  return (\n    <Formik\n      initialValues={{ query: '' }}\n      validationSchema={querySchema}\n      onSubmit={(values, { resetForm }) => {\n        const trimmedQuery = values.query.trim();\n        onSubmit(trimmedQuery);\n        resetForm();\n      }}\n    >\n      <Wrapper>\n        \n      <Input type=\"text\" id=\"query\" name=\"query\" />\n          <Error name=\"query\" component=\"span\" />\n       \n\n          <SearchFormBtn type=\"submit\">\n          <Icon />\n        </SearchFormBtn>\n      </Wrapper>\n    </Formik>\n  );\n};\n\n\n\n\n","import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ FoundedMovies, location }) => {\n  \n  return (\n    <ul>\n      {FoundedMovies.results.map(FoundedMovie => (\n        <li key={FoundedMovie.id}>\n          <Link to={`/movies/${FoundedMovie.id}`}\n          state ={{from: location}} >\n            {FoundedMovie.title}\n            </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { ProgressBar } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\nimport { Searcher } from 'components/SearshForm/SearshForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchSearchedItems } from 'api';\n\nexport default function Movies() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundedItems, setFoundedItems] = useState({});\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const location = useLocation ()\n\n  const handleSubmit = newQuery => {\n    if (newQuery === '') {\n      return;\n    }\n\n    params.set('query', newQuery);\n    setParams(params);\n\n    setFoundedItems([]);\n  };\n\n  useEffect(() => {\n    if (!params) return;\n\n    async function getSearchedItems() {\n      try {\n        setIsLoading(true);\n\n        const SearchedItems = await fetchSearchedItems(query);\n        setFoundedItems(SearchedItems);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Something went wrong! Try reload the page... '\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getSearchedItems();\n  }, [query, params]);\n\n  return (\n    <div>\n      <div>\n        <Searcher onSubmit={handleSubmit}></Searcher>\n      </div>\n\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"400\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"Teal\"\n        />\n      )}\n\n      {foundedItems.results && foundedItems.results.length > 0 && (\n        <MoviesList FoundedMovies={foundedItems} location ={location} />\n      )}\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","Form","_templateObject","_taggedTemplateLiteral","Input","Field","_templateObject2","SearchFormBtn","_templateObject3","Icon","IoMdSearch","_templateObject4","Error","ErrorMessage","_templateObject5","querySchema","Yup","shape","query","min","required","Searcher","_ref","onSubmit","_jsx","Formik","initialValues","validationSchema","values","_ref2","resetForm","trimmedQuery","trim","children","_jsxs","type","id","name","component","MoviesList","FoundedMovies","location","results","map","FoundedMovie","Link","to","concat","state","from","title","Movies","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","foundedItems","setFoundedItems","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useLocation","useEffect","_getSearchedItems","_asyncToGenerator","_regeneratorRuntime","_callee","SearchedItems","_context","prev","next","fetchSearchedItems","sent","t0","Notiflix","finish","stop","apply","arguments","getSearchedItems","newQuery","set","ProgressBar","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","length"],"sourceRoot":""}