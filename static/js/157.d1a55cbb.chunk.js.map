{"version":3,"file":"static/js/157.d1a55cbb.chunk.js","mappings":"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","sources":["api.js","components/Cast.js/CactStyled.js","components/Cast.js/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'abc18a67260269b802df6811b60af1e7';\n\nexport const fetchTrends = async () => {\n  const params = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  const response = await axios.get(`trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const fetchSearchedItems = async query => {\n  const params = new URLSearchParams({\n    api_key: KEY,\n    query: query,\n    language: 'en-US',\n    page: 1,\n  });\n\n  const response = await axios.get(`search/movie?${params}`);\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const params = new URLSearchParams({\n    api_key: KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${movieId}?${params}`);\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const params = new URLSearchParams({\n    api_key: KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${movieId}/credits?${params}`);\n  return response.data;\n};\n\nexport const fetchReviews = async movieId => {\n  const params = new URLSearchParams({\n    api_key: KEY,\n    language: 'en-US',\n  });\n  const response = await axios.get(`/movie/${movieId}/reviews?${params}`);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Actor = styled.li`\n  display: flex;\n  margin-bottom: 30px;\n  gap: 20px;\n`;\nexport const Author = styled.p`\n  padding-bottom: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { fetchCast } from 'api';\nimport { Actor } from './CactStyled';\n\nexport default function Cast () {\n  const params = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [actors, setActors] = useState({});\n\n  useEffect(() => {\n    if (!params) return;\n    setIsLoading(true);\n    async function getCast() {\n      try {\n        const fetchedCast = await fetchCast(params.Id);\n        setActors(fetchedCast);\n      } catch (error) {\n        Notiflix.Notify.failure(\n          'Something went wrong! Try reload the page... '\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getCast();\n  }, [params]);\n\n  const { cast } = actors;\n\n  return (\n    <div>\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"400\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor=\"#F4442E\"\n          barColor=\"Teal\"\n        />\n      )}\n      <ul>\n        {cast &&\n          cast.length > 0 &&\n          cast.map(item => (\n            <Actor key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${item.profile_path}`\n                    : `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`\n                }\n                width=\"150\"\n                alt={item.name}\n              />\n\n              <div>\n                <p>{item.name}</p>\n                <p>Character: {item.character}</p>\n              </div>\n            </Actor>\n          ))}\n      </ul>\n    </div>\n  );\n};\n"],"names":["axios","KEY","fetchTrends","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","response","_context","prev","next","URLSearchParams","api_key","concat","sent","abrupt","data","stop","apply","arguments","fetchSearchedItems","_ref2","_callee2","query","_context2","language","page","_x","fetchMovieById","_ref3","_callee3","movieId","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Actor","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Cast","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","actors","setActors","useEffect","_getCast","fetchedCast","Id","t0","Notiflix","finish","getCast","cast","_jsxs","children","_jsx","ProgressBar","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","length","map","item","src","profile_path","alt","name","character","id"],"sourceRoot":""}